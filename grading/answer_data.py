# grading/answer_data.py

reference_answers = {
    1: {
        1: "AI คือศาสตร์ที่ทำให้เครื่องสามารถเลียนแบบพฤติกรรมของมนุษย์ได้ เช่น การตัดสินใจ การแปลภาษา ส่วน ML คือการที่เครื่องเรียนรู้จากข้อมูลโดยไม่ต้องเขียนโปรแกรมแบบชัดเจน และ DL เป็นสาขาย่อยของ ML ที่ใช้โครงข่ายประสาทเทียมหลายชั้น",
        2: "Machine Learning มี 3 ประเภท: Supervised Learning (มี label เช่น การทำนายคะแนน), Unsupervised Learning (ไม่มี label เช่น การจัดกลุ่ม), Reinforcement Learning (เรียนรู้จากการตอบสนองของสิ่งแวดล้อม)",
        3: "Deep Learning ทำงานโดยใช้โครงข่ายประสาทเทียมหลายชั้นในการประมวลผลข้อมูล จึงสามารถเรียนรู้ฟีเจอร์ที่ซับซ้อนได้ดี เหมาะกับข้อมูลภาพและเสียงที่มีโครงสร้างหลายมิติ",
        4: "ข้อมูลที่มีคุณภาพช่วยให้โมเดลเรียนรู้ได้แม่นยำ ข้อมูลคุณภาพต่ำจะทำให้โมเดลเข้าใจผิดและทำนายผิดพลาด เช่น มี noise หรือ bias สูง",
        5: "โครงข่ายประสาทเทียมมีโครงสร้างคล้ายเซลล์ประสาทของมนุษย์ โดยมีชั้น input, hidden และ output ใช้การส่งสัญญาณและปรับค่าน้ำหนักเหมือนการเรียนรู้ของสมอง",
        6: "AI ทำได้ดีกว่าคน เช่น การจดจำใบหน้า การแปลภาษาอัตโนมัติ งานที่ยังต้องพึ่งมนุษย์ เช่น ความคิดสร้างสรรค์ การดูแลเด็ก",
        7: "ผลบวก: เพิ่มประสิทธิภาพ ลดต้นทุน ผลลบ: แทนแรงงานมนุษย์, ปัญหาความเป็นส่วนตัว เช่น AI แนะนำโฆษณาโดยเก็บข้อมูลส่วนตัว",
        8: "เริ่มจากเรียนรู้พื้นฐาน Python, เข้าใจ AI/ML/DL เบื้องต้น, เรียนรู้ไลบรารี เช่น scikit-learn, tensorflow และทำโปรเจกต์จริง",
        9: "AI จะไม่แทนมนุษย์ทั้งหมด เพราะยังขาดจริยธรรม ความเข้าใจเชิงสังคม เช่น การตัดสินใจเชิงคุณธรรม การแสดงอารมณ์",
        10: "เช่น Google Maps ใช้ AI คาดการณ์เส้นทาง หรือ AI ในมือถือช่วยกรองภาพ AI เหล่านี้ช่วยเพิ่มความสะดวกและลดเวลาในการทำงาน"
    },
    2: {
        1: "input() ใช้เพื่อรับค่าจากผู้ใช้ในรูปแบบข้อความ และนำไปใช้ในโปรแกรม เช่น ชื่อ, ตัวเลข",
        2: "if statement ใช้ตรวจสอบเงื่อนไข หากเป็นจริงจะรันคำสั่ง เช่น if score > 50:",
        3: "ฟังก์ชันคือชุดคำสั่ง เช่น def hello(): print('hi') ใช้เรียกใช้ซ้ำๆ ได้",
        4: "while loop ใช้วนลูปตามเงื่อนไข เช่น while x < 10: ใช้คำนวณผลรวม",
        5: "ใช้ try-except เพื่อจับ error เช่น division by zero ป้องกันโปรแกรมหยุดทำงาน",
        6: "for loop ใช้วนผ่านรายการ เช่น for i in range(5): print(i)",
        7: "list ใช้เก็บข้อมูลหลายค่า เช่น รายชื่อคน แก้ไขได้ เช่น mylist.append('A')",
        8: "append() เพิ่มทีละค่า เช่น list.append(1), extend() เพิ่มหลายค่า เช่น list.extend([1,2])",
        9: "try-except ใช้จับ error เช่น input ผิดพลาดแล้วแจ้งเตือน",
        10: "lambda คือฟังก์ชันไม่มีชื่อ ใช้เขียนสั้นๆ เช่น lambda x: x+1"
    },
    3: {
        1: "PIL ย่อมาจาก Python Imaging Library ใช้สำหรับเปิด แก้ไข และบันทึกไฟล์ภาพใน Python",
        2: "ฟังก์ชัน Image.convert('L') ใช้แปลงภาพสีให้เป็นภาพขาวดำใน PIL",
        3: "ใช้คำสั่ง cv2.cvtColor(image, cv2.COLOR_BGR2GRAY) เพื่อแปลงภาพจาก BGR เป็น Grayscale",
        4: "ใช้คำสั่ง cv2.imread('filename.jpg') เพื่อโหลดภาพใน OpenCV",
        5: "ใช้คำสั่ง cv2.imshow('window name', image) เพื่อแสดงภาพบนหน้าต่างใหม่",
        6: "ใช้คำสั่ง cv2.waitKey(0) เพื่อรอการกดปุ่มก่อนปิดหน้าต่าง",
        7: "ใช้คำสั่ง cv2.rectangle() เพื่อวาดกรอบสี่เหลี่ยมรอบใบหน้าหรือวัตถุ",
        8: "OpenCV ใช้ Haar Cascade Classifier ในการตรวจจับใบหน้าแบบง่าย",
        9: "ใช้คำสั่ง cv2.imwrite('output.jpg', image) เพื่อบันทึกภาพ",
        10: "ใช้คำสั่ง cv2.destroyAllWindows() เพื่อปิดหน้าต่างทั้งหมดที่แสดงภาพ",
    },
    4: {
        1: "sounddevice เป็นโมดูลที่ใช้บันทึกและเล่นเสียงผ่านไมโครโฟนหรือลำโพงใน Python",
        2: "scipy.io.wavfile ใช้ในการอ่านและบันทึกไฟล์ .wav",
        3: "ใช้ SpeechRecognition ร่วมกับ Recognizer และ record เพื่อแปลงเสียงเป็นข้อความ",
        4: "การแปลงข้อความเป็นเสียงสามารถทำได้โดยใช้ pyttsx3 หรือ gTTS",
        5: "sounddevice.play() ใช้ในการเล่นเสียงที่อยู่ในรูปแบบ array",
        6: "pydub ใช้ตัดต่อเสียง เช่น ตัดช่วงเสียง รวมไฟล์เสียง โดยใช้ AudioSegment",
        7: "SpeechRecognition ใช้ recognizer.listen(source) เพื่อรับเสียงจากไมโครโฟน",
        8: "ใช้ sounddevice.rec() และ sounddevice.wait() เพื่อบันทึกเสียงจากไมโครโฟน",
        9: "scipy.io.wavfile.read() และ write() ใช้จัดการกับไฟล์เสียง WAV",
        10: "pydub.AudioSegment.from_file() ใช้โหลดไฟล์เสียงชนิดต่าง ๆ",
    },
    5: {
        1: "Perceptron มี input, weight, bias, activation function ใช้จำแนกข้อมูลแบบเส้นตรง",
        2: "Activation Function เช่น ReLU, Sigmoid ใช้ปรับค่า output ของ neuron",
        3: "CNN ใช้ convolution layer ตรวจจับ feature เพื่อนำไปจำแนกรูปภาพ",
        4: "Backpropagation ปรับ weight โดยคำนวณ gradient ของ error",
        5: "การฝึก DNN มีขั้นตอน feedforward, คำนวณ error, backpropagation, update weights",
        6: "Dropout ใช้สุ่มปิดบาง neuron ระหว่าง training เพื่อป้องกัน overfitting",
        7: "Sigmoid ให้ค่า 0-1 แต่มีปัญหา vanishing gradient, ReLU ไม่มีปัญหานี้และคำนวณเร็วกว่า",
        8: "Optimizer เช่น SGD, Adam ช่วยปรับค่า weight ให้โมเดลเรียนรู้เร็วขึ้น",
        9: "Batch Normalization ช่วยให้โมเดล train ได้เสถียรขึ้น แต่เพิ่มเวลาในการประมวลผล",
        10: "LSTM มี cell state ช่วยจำลำดับข้อมูล เหมาะกับงานที่มีข้อมูลต่อเนื่อง เช่น NLP",
    },
    6: {
        1: "dobotapi เป็นโมดูลควบคุม Dobot Magician เช่นการเชื่อมต่อและสั่งงาน",
        2: "ต้องตั้งค่า port และ baudrate ให้ถูกต้องเมื่อต่อกับ Python",
        3: "ConnectDobot() ใช้เชื่อมต่อหุ่นยนต์กับคอมพิวเตอร์ผ่าน serial",
        4: "ตรวจสอบสถานะการเชื่อมต่อด้วยค่าที่ return จาก ConnectDobot()",
        5: "ต้องติดตั้งไลบรารี dobotapi และไดรเวอร์ USB ก่อนเริ่มใช้งาน",
        6: "MoveTo(x, y, z) สั่งหุ่นยนต์ไปยังตำแหน่งแบบ absolute",
        7: "MoveL() เป็นการเคลื่อนที่แบบเส้นตรง จากตำแหน่งปัจจุบันไปยังจุดเป้าหมาย",
        8: "ใช้หน่วยมิลลิเมตรในการกำหนดตำแหน่งของ Dobot",
        9: "emergencyStop() ใช้หยุดการทำงานทันทีในกรณีฉุกเฉิน",
        10: "getPosition() ใช้ดึงตำแหน่งปัจจุบันของแขนหุ่นยนต์",
    },
    7: {
        1: "พิกัด X, Y, Z ใช้ควบคุมตำแหน่งปลายแขนของหุ่นยนต์",
        2: "MoveTo(x, y, z) ใช้ย้ายปลายแขนไปยังพิกัดที่ต้องการ",
        3: "MoveL() ใช้ในการเคลื่อนที่อย่างต่อเนื่องเป็นเส้นตรง",
        4: "getPosition() คืนค่าตำแหน่งปัจจุบันของหุ่นยนต์",
        5: "ใช้ emergencyStop() หยุดหุ่นยนต์ในทันทีเมื่อเกิดเหตุฉุกเฉิน",
        6: "setPosition() ใช้ตั้งค่าตำแหน่งอ้างอิงของหุ่นยนต์",
        7: "สามารถควบคุมด้วยการใช้ลำดับตำแหน่งร่วมกับฟังก์ชันเช่น MoveJ หรือ MoveL",
        8: "setSpeed() หรือ MoveTo พร้อม parameter ความเร็ว ใช้ตั้งค่าความเร็ว",
        9: "getPose() ตรวจสอบมุมของข้อต่อต่าง ๆ ของหุ่นยนต์",
        10: "ต้องกำหนด boundary พื้นที่ทำงานและตรวจสอบข้อจำกัดของแกนก่อนใช้งาน",
    },
    8: {
        1: "Feature Matching ใช้เปรียบเทียบฟีเจอร์จากวัตถุในภาพเพื่อระบุตัวตน",
        2: "Dobot สามารถทำซ้ำได้แม่นยำ เหมาะสำหรับงานคัดแยกจำนวนมาก",
        3: "CNN ใช้ convolution layers ตรวจจับ pattern เพื่อจำแนกวัตถุ",
        4: "ตำแหน่งกล้องต้องสัมพันธ์กับ workspace ของ Dobot เพื่อความแม่นยำ",
        5: "Object Detection ใช้ bounding box และ class เพื่อตรวจจับวัตถุในภาพ",
        6: "Mask R-CNN สามารถแยกวัตถุที่ซับซ้อนได้ดีโดยใช้ segmentation",
        7: "ภาพละเอียดสูงให้ข้อมูลมากขึ้น ช่วยให้จำแนกวัตถุได้แม่นยำ",
        8: "เลือกฟีเจอร์ที่มีความเด่นและแตกต่างเพื่อลดการจับผิดพลาด",
        9: "CNN สามารถเรียนรู้ความแตกต่างของคลาสวัตถุจากภาพได้โดยอัตโนมัติ",
        10: "ระบบกล้องและ Dobot ช่วยเพิ่มความเร็วและความแม่นยำในการทำงานอัตโนมัติ",
    },
    9: {
        1: "NLP ช่วยให้หุ่นยนต์เข้าใจข้อความจากผู้ใช้แล้วนำไปแปลงเป็นคำสั่ง",
        2: "LLM เข้าใจภาษาได้ดี มี context memory เหมาะสำหรับการสนทนา",
        3: "ต้องประมวลผลเสียงผ่าน ASR (Automatic Speech Recognition)",
        4: "Transformer แปลงข้อความเป็น vector แล้วเข้าโมเดล LLM",
        5: "Prompt ที่ดีต้องมีคำสั่งชัดเจน ไม่คลุมเครือ",
        6: "LLM เข้าใจคำสั่งโดยแปลงเป็น intent และ action ได้อย่างแม่นยำ",
        7: "LLM เข้าใจสแลงได้เพราะเรียนจากข้อมูลภาษาพูดในชีวิตจริง",
        8: "NLU แยก intent และ entity ออกจากข้อความเพื่อประมวลผลต่อ",
        9: "ข้อดีคือใช้งานง่าย แต่ข้อเสียคือต้องการทรัพยากรสูงและเสียงรบกวนส่งผล",
        10: "หุ่นยนต์สามารถจัดการคำสั่งซับซ้อนได้โดยการแตกข้อความเป็นลำดับการทำงาน",
    },
    10: {
        1: "Cloud ช่วยให้สามารถเข้าถึงข้อมูลย้อนหลัง วิเคราะห์ และสำรองข้อมูลได้สะดวก",
        2: "Logging คือการบันทึกกิจกรรม เช่น คำสั่งการทำงานหรือข้อผิดพลาด",
        3: "Cloud Logging ช่วยให้สามารถตรวจสอบพฤติกรรมและแก้ไขปัญหาได้เร็วขึ้น",
        4: "CSV อ่านง่าย ใช้กับ Excel หรือระบบอื่นได้โดยตรง",
        5: "fetchLog() ใช้ดึงข้อมูล log ที่บันทึกไว้ในระบบ Cloud",
        6: "ต้องตั้งค่า permission และการเข้ารหัสเพื่อป้องกันข้อมูลรั่วไหล",
        7: "Cloud Logging ทำให้สามารถจัดเก็บข้อมูลจำนวนมากได้อย่างมีระบบ",
        8: "ช่วยวิเคราะห์ความถี่ ความผิดพลาด และแนวโน้มการใช้งานหุ่นยนต์",
        9: "setAlert() ใช้กำหนดเงื่อนไขเพื่อแจ้งเตือนอัตโนมัติเมื่อเกิดเหตุการณ์สำคัญ",
        10: "AWS มีความปลอดภัยสูง มีเครื่องมือครบถ้วนสำหรับ logging และ monitoring",
    }
}
